// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  name     String

  refreshToken String? @map("refresh_token")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  event     Event[]
  eventJoin EventJoin[]

  @@map("user")
}

model Event {
  id           Int        @id @default(autoincrement())
  hostId       Int        @map("host_id")
  title        String
  dates        DateTime[]
  earliestTime Int        @map("earliest_time")
  latestTime   Int        @map("latest_time")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  host User @relation(fields: [hostId], references: [id])

  eventJoin EventJoin[]

  @@map("event")
}

model EventJoin {
  id             Int             @id @default(autoincrement())
  eventId        Int             @map("event_id")
  userId         Int             @map("user_id")
  joinState      JoinState
  availableTimes AvailableTime[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  event Event @relation(fields: [eventId], references: [id])
  user  User  @relation(fields: [userId], references: [id])

  @@unique([eventId, userId])
  @@map("event_join")
}

enum JoinState {
  PENDING
  APPROVED
  REFUSED
}

model AvailableTime {
  id          Int      @id @default(autoincrement())
  eventJoinId Int      @map("event_join_id")
  startTime   DateTime @map("start_time")
  endTime     DateTime @map("end_time")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  EventJoin EventJoin @relation(fields: [eventJoinId], references: [id])

  @@map("available_time")
}
